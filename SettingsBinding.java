// Generated by view binder compiler. Do not edit!
package com.example.travelcompanion.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.travelcompanion.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SettingsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button Circle;

  @NonNull
  public final LinearLayout bg;

  @NonNull
  public final EditText changepass;

  @NonNull
  public final EditText changeusername;

  @NonNull
  public final Button setback;

  @NonNull
  public final Button square;

  private SettingsBinding(@NonNull LinearLayout rootView, @NonNull Button Circle,
      @NonNull LinearLayout bg, @NonNull EditText changepass, @NonNull EditText changeusername,
      @NonNull Button setback, @NonNull Button square) {
    this.rootView = rootView;
    this.Circle = Circle;
    this.bg = bg;
    this.changepass = changepass;
    this.changeusername = changeusername;
    this.setback = setback;
    this.square = square;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Circle;
      Button Circle = ViewBindings.findChildViewById(rootView, id);
      if (Circle == null) {
        break missingId;
      }

      LinearLayout bg = (LinearLayout) rootView;

      id = R.id.changepass;
      EditText changepass = ViewBindings.findChildViewById(rootView, id);
      if (changepass == null) {
        break missingId;
      }

      id = R.id.changeusername;
      EditText changeusername = ViewBindings.findChildViewById(rootView, id);
      if (changeusername == null) {
        break missingId;
      }

      id = R.id.setback;
      Button setback = ViewBindings.findChildViewById(rootView, id);
      if (setback == null) {
        break missingId;
      }

      id = R.id.square;
      Button square = ViewBindings.findChildViewById(rootView, id);
      if (square == null) {
        break missingId;
      }

      return new SettingsBinding((LinearLayout) rootView, Circle, bg, changepass, changeusername,
          setback, square);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
